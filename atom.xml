<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>东湖风的札记</title>
  
  <subtitle>Keep Learning</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://github.com/donghufeng/"/>
  <updated>2020-03-16T05:33:04.407Z</updated>
  <id>https://github.com/donghufeng/</id>
  
  <author>
    <name>xu xusheng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Notes on Quantum Information - 各种分解</title>
    <link href="https://github.com/donghufeng/2020/03/16/Notes-on-Quantum-Information-%E5%90%84%E7%A7%8D%E5%88%86%E8%A7%A3/"/>
    <id>https://github.com/donghufeng/2020/03/16/Notes-on-Quantum-Information-各种分解/</id>
    <published>2020-03-16T05:28:14.000Z</published>
    <updated>2020-03-16T05:33:04.407Z</updated>
    
    <content type="html"><![CDATA[<p>Notes on <em>Quantum Computation and Quantum Information</em>.<br>介绍矩阵的各种分解。<br><a id="more"></a></p><h2 id="极分解-Polar-decomposition"><a href="#极分解-Polar-decomposition" class="headerlink" title="极分解(Polar decomposition)"></a>极分解(Polar decomposition)</h2><p>对于$V$空间中的任意算符$A$，能将其按照如下形式分解</p><script type="math/tex; mode=display">A=UJ=KU</script><p>其中，$U$为酉矩阵，且$J$为半正定矩阵，$J=\sqrt{A^\dagger A}$，$K=\sqrt{AA^\dagger}$，如果$A$可逆，则$U$唯一。<br><strong>证明：</strong></p><ol><li>取$V$空间的一组基矢$\left|i\right&gt;$和任意态$\left|v\right&gt;$，则：<script type="math/tex; mode=display">\left<v\right|A^\dagger A \left|v\right>=\sum_i\left|a_i\right|^2\ge 0</script>因此$A^\dagger A$是对称半正定矩阵，$\sqrt{A^\dagger A}$也是对称半正定矩阵。</li><li>根据谱定理，对于半正定矩阵有：<br><script type="math/tex">J=\sqrt{A^\dagger A}=\sum_i \lambda_i \left|i\right>\left<i\right|(\lambda_i\ge0)</script>。</li><li>定义$\left|\psi_i\right&gt;=A \left|i\right&gt;$，因此有：<br><script type="math/tex">\left<\psi_i\mid \psi_i\right>=\left<i\right|A^\dagger A\left|i\right>=\lambda_i^2</script>。</li><li>对于$\lambda_i\neq 0$的态，定义$\left|e_i\right&gt;=\left|\psi_i\right&gt;/\lambda_i$，因此$\left|e_i\right&gt;$是彼此正交的单位矢量。</li><li>利用Schmidt正交化方法对$\left|e_i\right&gt;$进行扩充，使得其为$V$中的基矢，并仍然记为$\left|e_i\right&gt;$。</li><li>定义酉算符$U=\sum_i \left|e_i\right&gt;\left&lt;i\right|$。</li><li>对于$\lambda_i\neq 0$的那些态，有<br><script type="math/tex">UJ \left|i\right>=\lambda_i U \left|i\right>=\lambda_i \left|e_i\right>=\left|\psi_i\right>=A \left|i\right></script>。</li><li>对于$\lambda_i =0$的态来说，有<script type="math/tex; mode=display">UJ \left|i\right>=0=\left|\psi_i\right>=A \left|i\right></script></li></ol><p>综上，$A=UJ$。此时，$A=UJ=UJU^\dagger U=KU$，且$K=UJU^\dagger=K^\dagger$，此时</p><script type="math/tex; mode=display">AA^\dagger=KUU^\dagger K^\dagger=K^2</script><p>所以$K=\sqrt{AA^\dagger}$。</p><h2 id="奇异值分解"><a href="#奇异值分解" class="headerlink" title="奇异值分解"></a>奇异值分解</h2><p>对于任意方矩阵，总可以按照如下分解，</p><script type="math/tex; mode=display">A=UDV</script><p>其中，$U$和$V$是酉矩阵，$D$是对角矩阵，称为$A$的奇异值。<br><strong>证明：</strong></p><ol><li>根据极分解，$A=SJ$，其中$S$为酉矩阵，$J$为半正定矩阵。</li><li>根据谱分解定理，$J=TDT^\dagger$，其中$T$为酉矩阵，$D$为对角矩阵。</li><li>由上：<script type="math/tex; mode=display">A=SJ=STDT^\dagger</script></li></ol><p>因此有$U=ST$，$V=T^\dagger$。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Notes on &lt;em&gt;Quantum Computation and Quantum Information&lt;/em&gt;.&lt;br&gt;介绍矩阵的各种分解。&lt;br&gt;
    
    </summary>
    
    
      <category term="量子信息" scheme="https://github.com/donghufeng/categories/%E9%87%8F%E5%AD%90%E4%BF%A1%E6%81%AF/"/>
    
    
      <category term="量子信息" scheme="https://github.com/donghufeng/tags/%E9%87%8F%E5%AD%90%E4%BF%A1%E6%81%AF/"/>
    
      <category term="极分解" scheme="https://github.com/donghufeng/tags/%E6%9E%81%E5%88%86%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>Notes on Quantum Information - 密度算符与迹</title>
    <link href="https://github.com/donghufeng/2020/03/16/Notes-on-Quantum-Information-%E5%AF%86%E5%BA%A6%E7%AE%97%E7%AC%A6%E4%B8%8E%E8%BF%B9/"/>
    <id>https://github.com/donghufeng/2020/03/16/Notes-on-Quantum-Information-密度算符与迹/</id>
    <published>2020-03-16T05:24:20.000Z</published>
    <updated>2020-03-16T05:27:09.083Z</updated>
    
    <content type="html"><![CDATA[<p>Notes on <em>Quantum Computation and Quantum Information</em>.<br>记录零碎知识点。<br><a id="more"></a></p><h2 id="密度矩阵"><a href="#密度矩阵" class="headerlink" title="密度矩阵"></a>密度矩阵</h2><p>混态不能用一个态标识出来，系统中出现态$\left|\psi_i\right&gt;$的概率为$p_i$，密度矩阵可写为：</p><script type="math/tex; mode=display">\rho=\sum_i^np_i \left|\psi_i\right>\left<\psi_i\right|</script><p>这里当$n=1$是为纯态密度矩阵。可观察量$A$在混态中的期望值为：</p><script type="math/tex; mode=display">E(A)=\sum_i^n p_i \left<\psi_i\right|A\left|\psi_i\right>=\text{tr}(\rho A)</script><p>纯态也有相同结果 。</p><p>混态的$\text{tr}(\rho^2)&lt;1$：</p><script type="math/tex; mode=display">\text{tr}(\rho^2)=\sum_{i,j}p_j^2 \left<i\mid \psi_j\right> \left<\psi_j\mid i\right>\le\sum_i p_i^2<\sum_i p_i=1</script><p>对于纯态来说：</p><script type="math/tex; mode=display">\left|\psi\right>=\cos\frac{\theta}{2} \left|0\right>+e^{i\varphi}\sin{\frac{\theta}{2}} \left|1\right></script><p>其密度矩阵为：</p><script type="math/tex; mode=display">\begin{aligned}\rho&= \left|\psi\right>\left<\psi\right|\\&= \begin{pmatrix}\cos^2\frac{\theta}{2}&\cos\frac{\theta}{2}\sin\frac{\theta}{2}e^{-i\varphi}\\\cos\frac{\theta}{2}\sin\frac{\theta}{2}e^{i\varphi}&\sin^2\frac{\theta}{2}\end{pmatrix}\\&= \frac{1}{2}\begin{pmatrix}1+\cos\theta&\sin\theta e^{-i\varphi}\\\sin\theta e^{i\varphi}&1-\cos\theta\end{pmatrix}\\&=\frac{I+\vec{r}\cdot \vec{\sigma}}{2}\end{aligned}</script><p>对于混态来说，有$\rho=\sum_i p_i \rho_i$，因此，也有上述的形式。</p><h2 id="迹"><a href="#迹" class="headerlink" title="迹"></a>迹</h2><p>对于任意算符$A$，和一组正交基矢$\left|i\right&gt;$,迹的定义为：</p><script type="math/tex; mode=display">\text{tr}(A)=\sum_i \left<i\right|A\left|i\right>=\sum_i A_{ii}</script><p>取任意态$\left|\psi\right&gt;$，则有$\text{tr}(A \left|\psi\right&gt;\left&lt;\psi\right|)=\left&lt;\psi\right|A\left|\psi\right&gt;$，证明如下：</p><script type="math/tex; mode=display">\text{tr}(A \left|\psi\right>\left<\psi\right|)=\sum_i \left<i\right|A\left|\psi\right> \left<\psi\mid i\right>=\sum_i  \left<\psi\mid i\right>\left<i\right|A\left|\psi\right>=\left<\psi\right|A\left|\psi\right></script><h2 id="约化密度矩阵和偏迹"><a href="#约化密度矩阵和偏迹" class="headerlink" title="约化密度矩阵和偏迹"></a>约化密度矩阵和偏迹</h2><script type="math/tex; mode=display">\rho^A=\text{tr}_B(\rho^{AB})</script><p>e.g.:</p><script type="math/tex; mode=display">\text{tr}_B(\left|a_1\right>\left<a_2\right|\otimes \left|b_1\right> \left<b_2\right|)=\left|a_1\right>\left<a_2\right|\text{tr}(\left|b_1\right> \left<b_2\right|)=\left|a_1\right>\left<a_2\right| \left<b_2\mid b_1\right></script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Notes on &lt;em&gt;Quantum Computation and Quantum Information&lt;/em&gt;.&lt;br&gt;记录零碎知识点。&lt;br&gt;
    
    </summary>
    
    
      <category term="量子信息" scheme="https://github.com/donghufeng/categories/%E9%87%8F%E5%AD%90%E4%BF%A1%E6%81%AF/"/>
    
    
      <category term="量子信息" scheme="https://github.com/donghufeng/tags/%E9%87%8F%E5%AD%90%E4%BF%A1%E6%81%AF/"/>
    
      <category term="密度矩阵" scheme="https://github.com/donghufeng/tags/%E5%AF%86%E5%BA%A6%E7%9F%A9%E9%98%B5/"/>
    
      <category term="迹" scheme="https://github.com/donghufeng/tags/%E8%BF%B9/"/>
    
  </entry>
  
  <entry>
    <title>Notes on Quantum Information - Cauchy-Schwarz不等式</title>
    <link href="https://github.com/donghufeng/2020/03/16/Notes-on-Quantum-Information-Cauchy-Schwarz%E4%B8%8D%E7%AD%89%E5%BC%8F/"/>
    <id>https://github.com/donghufeng/2020/03/16/Notes-on-Quantum-Information-Cauchy-Schwarz不等式/</id>
    <published>2020-03-16T05:19:12.000Z</published>
    <updated>2020-03-16T05:21:52.176Z</updated>
    
    <content type="html"><![CDATA[<p>Notes on <em>Quantum Computation and Quantum Information</em>.<br>介绍Cauchy-Schwarz不等式。<br><a id="more"></a></p><h2 id="Cauchy-Schwarz不等式"><a href="#Cauchy-Schwarz不等式" class="headerlink" title="Cauchy-Schwarz不等式"></a>Cauchy-Schwarz不等式</h2><p>希尔伯特空间中的两个态矢量$\left|v\right&gt;$和$\left|w\right&gt;$，则有：</p><script type="math/tex; mode=display">\left| \left<v\mid w\right>\right|^2\le \left<v\mid v\right> \left<w\mid w\right></script><p><strong>证明：</strong><br>在希尔伯特空间中选择一组基矢$\left|i\right&gt;$，并使得该组基矢的第一个为</p><script type="math/tex; mode=display">\left|w\right>/\sqrt{\left<w\mid w\right>}</script><p>因此：</p><script type="math/tex; mode=display">\begin{aligned}\left<v\mid v\right>\left<w\mid w\right>&=\sum_i \left<v\mid i\right>\left<i\mid v\right>\left<w\mid w\right>\\&\ge\frac{\left<v\mid w\right>\left<w\mid v\right>}{\left<w\mid w\right>}\left<w\mid w\right>\\&=\left|\left<v\mid w\right>\right|^2\end{aligned}</script><p>取$\ge$是因为求和中只取第一个基矢，而忽略掉有剩余基矢得到的数（为正数）。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Notes on &lt;em&gt;Quantum Computation and Quantum Information&lt;/em&gt;.&lt;br&gt;介绍Cauchy-Schwarz不等式。&lt;br&gt;
    
    </summary>
    
    
      <category term="量子信息" scheme="https://github.com/donghufeng/categories/%E9%87%8F%E5%AD%90%E4%BF%A1%E6%81%AF/"/>
    
    
      <category term="量子信息" scheme="https://github.com/donghufeng/tags/%E9%87%8F%E5%AD%90%E4%BF%A1%E6%81%AF/"/>
    
      <category term="Cauchy-Schwarz不等式" scheme="https://github.com/donghufeng/tags/Cauchy-Schwarz%E4%B8%8D%E7%AD%89%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Hexo注意事项</title>
    <link href="https://github.com/donghufeng/2020/03/16/Hexo%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <id>https://github.com/donghufeng/2020/03/16/Hexo注意事项/</id>
    <published>2020-03-16T04:42:52.000Z</published>
    <updated>2020-03-16T05:18:09.315Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo使用过程中的注意事项。<br><a id="more"></a></p><ul><li>大括号{}问题。</li></ul><p>在公式中，如果要显示”{}”，需要加两个”//“，如$\{\}$。</p><ul><li>量子态问题</li></ul><p>如果一段话中有两个态矢量，且里面的字母有大括号包围的下脚标，需要将”_<em>“改为”\_</em>“，如：</p><p>$\left|a_{0}\right&gt;$b$\left|c_{1}\right&gt;.$</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hexo使用过程中的注意事项。&lt;br&gt;
    
    </summary>
    
    
    
      <category term="Hexo" scheme="https://github.com/donghufeng/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Notes on Quantum Information - 量子傅里叶变换</title>
    <link href="https://github.com/donghufeng/2020/03/16/Notes-on-Quantum-Information-%E9%87%8F%E5%AD%90%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2/"/>
    <id>https://github.com/donghufeng/2020/03/16/Notes-on-Quantum-Information-量子傅里叶变换/</id>
    <published>2020-03-16T04:31:18.000Z</published>
    <updated>2020-03-16T04:57:21.197Z</updated>
    
    <content type="html"><![CDATA[<p>Notes on <em>Quantum Computation and Quantum Information</em>.<br>量子傅里叶变换算法。<br><a id="more"></a></p><h2 id="经典离散傅里叶算法"><a href="#经典离散傅里叶算法" class="headerlink" title="经典离散傅里叶算法"></a>经典离散傅里叶算法</h2><p>对于数据点集合$A=\{A_i,i=0,N-1\}$，其离散傅里叶变化为</p><script type="math/tex; mode=display">B_j=\frac{1}{\sqrt{N}}\sum_{k=0}^{N-1}{e^{2\pi i jk/N}A_k}</script><h2 id="量子离散傅里叶算法"><a href="#量子离散傅里叶算法" class="headerlink" title="量子离散傅里叶算法"></a>量子离散傅里叶算法</h2><p>n比特的态可以表示成$\left|j_1j_2…j_n\right&gt;$，可将态看着二进制数，从而也可将态写成十进制数表示为$\left|j\right&gt;$，其中</p><script type="math/tex; mode=display">j=[j_1\cdots j_n]=j_1 * 2^{n-1}+j_i*2^{n-i}+j_n</script><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">n=<span class="number">3</span></span><br><span class="line">s=<span class="string">'111'</span></span><br><span class="line">k=int(s,<span class="number">2</span>) <span class="comment"># 参数2用来表示从二进制转化为十进制</span></span><br><span class="line">s==bin(k)[<span class="number">2</span>:].zfill(n) <span class="comment">#bin函数用来转化为二进制，zfill函数用来补零</span></span><br></pre></td></tr></table></figure><p>对于二进制的分数表示$0.j_1j_2\cdots j_n$，其表示为十进制为</p><script type="math/tex; mode=display">[0.j_1j_2\cdots j_n]=j_1*2^{-1}+\cdots+j_n*2^{-n}=\sum_{k=1}^{n}j_k*2^{-k}.</script><p>我们有$[0.j_1\cdots j_n]=[j_1\cdots j_n]/2^n.$</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">n=<span class="number">3</span></span><br><span class="line">s=<span class="string">'0.011'</span></span><br><span class="line">k=int(s[<span class="number">2</span>:],<span class="number">2</span>)/<span class="number">2</span>**n</span><br><span class="line">s==<span class="string">'0.'</span>+bin(int(k*<span class="number">2</span>**n))[<span class="number">2</span>:].zfill(n)</span><br></pre></td></tr></table></figure><p>对于态$\left|j\right&gt;$，其傅里叶变换定义为</p><script type="math/tex; mode=display">\left|j\right>=\frac{1}{\sqrt{N}}\sum_{k=0}^{N-1}e^{2\pi i jk/N}\left|k\right>,</script><p>其中$N=2^n$，设$\omega_n=e^{\frac{2\pi i}{2^n}}$其矩阵表示为，</p><script type="math/tex; mode=display">\begin{pmatrix}\left|0\right>\\\vdots\\\left|j\right>\\\vdots\\\left|N-1\right>\end{pmatrix}=\frac{1}{\sqrt{N}}\begin{pmatrix}1&\cdots&1&\cdots&1\\\vdots&\cdots&\vdots&\cdots&\vdots\\1&\cdots&\omega_n^{j k}&\cdots&\omega_n^{j (N-1)}\\\vdots&\cdots&\vdots&\cdots&\vdots\\1&\cdots&\omega_n^{(N-1)k}&\cdots&\omega_n^{(N-1)^2}\\\end{pmatrix}\begin{pmatrix}\left|0\right>\\\vdots\\\left|k\right>\\\vdots\\\left|N-1\right>\end{pmatrix}</script><p>根据定义</p><script type="math/tex; mode=display">\begin{aligned}\sqrt{N}\left|j\right>&=\sum_{k=0}^{N-1}e^{2\pi ijk/N}\left|k\right>\\&=\sum_{k=0}^{N-1}e^{2\pi i k[0.j_1\cdots j_{n}]}\left|k\right>\\&=\sum_{(k_0,\cdots,k_{n-1})\in \{0,1\}^n}e^{2\pi i [0.j_1\cdots j_{n}]\sum_{l=1}^{n}2^{l-1}k_{n-l}}\left|k_0\cdots k_{n-1}\right>\\&=\sum_{(k_0,\cdots,k_{n-1})\in \{0,1\}^n}\prod_{l=1}^{n} e^{2\pi i k_{n-l}[j_1\cdots j_{l-1}.j_{l}\cdots j_n]}\left|k_0\cdots k_{n-1}\right>\\&=\sum_{(k_0,\cdots,k_{n-1})\in \{0,1\}^n}\prod_{l=1}^{n} e^{2\pi i k_{n-l}[0.j_{l}\cdots j_n]}\left|k_0\cdots k_{n-1}\right>\\&=(\left|0\right>+e^{2\pi i [0.j_n]}\left|1\right>)\otimes \sum_{(k_1,\cdots,k_{n-1})\in \{0,1\}^{(n-1)}}\prod_{l=1}^{n-1} e^{2\pi i k_{n-l}[0.j_{l}\cdots j_n]}\left|k_1\cdots k_{n-1}\right>\\&=\otimes_{l=1}^{n}\left(\left|0\right>+e^{2\pi i[0.j_l\cdots j_n]}\left|1\right>\right)\end{aligned}</script><p>第四个等式到第五个等式用到事实</p><script type="math/tex; mode=display">e^{2\pi i k_{n-1}[j_1\cdots j_{l-1}.j_l\cdots j_n]}=e^{2\pi i k_{n-1}[j_1\cdots j_{l-1}]}e^{2\pi i k_{n-1}[0.j_{l}\cdots j_{n}]}=1\cdot e^{2\pi i k_{n-1}[0.j_l\cdots j_n]}</script><h2 id="门实现"><a href="#门实现" class="headerlink" title="门实现"></a>门实现</h2><p>对于目标态</p><script type="math/tex; mode=display">\begin{aligned}&\frac{1}{\sqrt{2}}(\left|0\right>+e^{2\pi i [0.j_n]}\left|1\right>)\\&=H\left|j_n\right>\end{aligned}</script><p>对于目标态</p><script type="math/tex; mode=display">\begin{aligned}&\frac{1}{\sqrt{2}}(\left|0\right>+e^{2\pi i [0.j_{n-1}j_n]}\left|1\right>)\\&=\frac{1}{\sqrt{2}}(\left|0\right>+e^{2\pi i [0.j_{n-1}]}e^{2\pi i [0.0j_n]}\left|1\right>)\end{aligned}</script><p>可先对$\left|j_{n-1}\right&gt;$做哈德马德变换，再做用$\left|j_{n}\right&gt;$控制$\left|j_{n-1}\right&gt;$的相位门$R_2$，其中</p><script type="math/tex; mode=display">R_m=\begin{pmatrix}1&0\\0&e^{2\pi i /(2^m)}\end{pmatrix}</script><p>具体实现如下图，最后再做sweep门交换一下态即可。<br><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/6/61/Q_fourier_nqubits.png/1280px-Q_fourier_nqubits.png?1557480175741" alt="quantum fourier"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Notes on &lt;em&gt;Quantum Computation and Quantum Information&lt;/em&gt;.&lt;br&gt;量子傅里叶变换算法。&lt;br&gt;
    
    </summary>
    
    
      <category term="量子信息" scheme="https://github.com/donghufeng/categories/%E9%87%8F%E5%AD%90%E4%BF%A1%E6%81%AF/"/>
    
    
      <category term="量子信息" scheme="https://github.com/donghufeng/tags/%E9%87%8F%E5%AD%90%E4%BF%A1%E6%81%AF/"/>
    
      <category term="量子傅里叶变换" scheme="https://github.com/donghufeng/tags/%E9%87%8F%E5%AD%90%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>Notes on Quantum Information - 量子并行性</title>
    <link href="https://github.com/donghufeng/2020/03/16/Notes-on-Quantum-Information-%E9%87%8F%E5%AD%90%E5%B9%B6%E8%A1%8C%E6%80%A7/"/>
    <id>https://github.com/donghufeng/2020/03/16/Notes-on-Quantum-Information-量子并行性/</id>
    <published>2020-03-16T04:12:11.000Z</published>
    <updated>2020-03-16T04:24:11.073Z</updated>
    
    <content type="html"><![CDATA[<p>Notes on <em>Quantum Computation and Quantum Information</em>.<br>介绍量子并行性的优越以及相关的重要算法。</p><a id="more"></a><h2 id="量子并行性"><a href="#量子并行性" class="headerlink" title="量子并行性"></a>量子并行性</h2><p>假设有函数$f(x):\{0,1\}^n\rightarrow{0,1}$，可以构造门$U_f$使得</p><script type="math/tex; mode=display">U_f \left|x,y\right>=\left|x,y\oplus f(x)\right></script><ul><li>同时得到$f(x)$的值</li></ul><p>取$\left|x,y\right&gt;=\frac{1}{\sqrt{2^n}}\sum_x \left|x\right&gt;\left|0\right&gt;$，作用$U_f$后，得到</p><script type="math/tex; mode=display">U_f \left|x,y\right>=\frac{1}{\sqrt{2^n}}\sum_x \left|x\right>\left|f(x)\right></script><ul><li>Deutsch算法</li></ul><p>上面得到的态在测量时，只能坍缩到某个特定的$\left|f(x)\right&gt;$，因此并不真正意义上的并行。该算法能得到关于$f(x)$的全局信息。<br><img src="/img/Deutsch.png" alt="Deutsch算法"><br>对于以上线路，经过演算可得到：</p><script type="math/tex; mode=display">\left|\psi_3\right>=\pm \left|f(0)\oplus f(1)\right>\frac{\left|0\right>-\left|1\right>}{\sqrt{2}}</script><p>因此第一个比特是$f(x)$的全局信息$f(0)\oplus f(1)$。计算过程用到一个关键点：</p><script type="math/tex; mode=display">U_f \left|x\right>\frac{\left|0\right>-\left|1\right>}{\sqrt{2}}=(-1)^{f(x)}\left|x\right>\frac{\left|0\right>-\left|1\right>}{\sqrt{2}}</script><ul><li>Deutsch-Jozsa算法</li></ul><p>如果Alice手上的$f(x)$确保是常值函数或者平衡函数，Bob如何快速（尽量少次数地交换信息）判断出是什么函数？<br><img src="/img/Deutsch-Jozsa.png" alt="Deutsch-Jozsa算法"><br>根据演化可得到：</p><script type="math/tex; mode=display">\left|\psi_3\right>=\frac{1}{2^n}\sum_z\sum_x(-1)^{f(x)+x\cdot z}\left|z\right>\frac{\left|0\right>-\left|1\right>}{\sqrt{2}}</script><p>注意到，取$\left|z\right&gt;=\left|0\right&gt;^{\otimes n}$时，$\sum_x(-1)^{f(x)}/2^n$对于$f$为常值函数时已经归一化，$\left|z\right&gt;$取不到其他态，因此前$n$个比特只能全为0；当$f$为平衡函数时，$\left|z\right&gt;$中$\left|0\right&gt;^{\otimes n}$项的振幅为0，因此，前$n$个比特必不能全为0。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Notes on &lt;em&gt;Quantum Computation and Quantum Information&lt;/em&gt;.&lt;br&gt;介绍量子并行性的优越以及相关的重要算法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="量子信息" scheme="https://github.com/donghufeng/categories/%E9%87%8F%E5%AD%90%E4%BF%A1%E6%81%AF/"/>
    
    
      <category term="量子信息" scheme="https://github.com/donghufeng/tags/%E9%87%8F%E5%AD%90%E4%BF%A1%E6%81%AF/"/>
    
      <category term="量子并行性" scheme="https://github.com/donghufeng/tags/%E9%87%8F%E5%AD%90%E5%B9%B6%E8%A1%8C%E6%80%A7/"/>
    
      <category term="Deutsch算法" scheme="https://github.com/donghufeng/tags/Deutsch%E7%AE%97%E6%B3%95/"/>
    
      <category term="Deutsch-Jozsa算法" scheme="https://github.com/donghufeng/tags/Deutsch-Jozsa%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Notes on Quantum Information - 量子隐形传态</title>
    <link href="https://github.com/donghufeng/2020/03/16/Notes-on-Quantum-Information-%E9%87%8F%E5%AD%90%E9%9A%90%E5%BD%A2%E4%BC%A0%E6%80%81/"/>
    <id>https://github.com/donghufeng/2020/03/16/Notes-on-Quantum-Information-量子隐形传态/</id>
    <published>2020-03-16T04:05:16.000Z</published>
    <updated>2020-03-16T04:56:52.509Z</updated>
    
    <content type="html"><![CDATA[<p>Notes on <em>Quantum Computation and Quantum Information</em>.<br>量子隐形传态过程。<br><a id="more"></a></p><h2 id="量子隐形传态"><a href="#量子隐形传态" class="headerlink" title="量子隐形传态"></a>量子隐形传态</h2><p>Alice和Bob的粒子处于纠缠态$\left|\beta_{00}\right&gt;$，Alice需要将态$\left|\psi\right&gt;$传递给Bob，步骤如下：</p><ol><li>Alice对手中的两个比特做用CNOT门</li><li>Alice对手中的第一个比特作用Hadamard门</li><li>Alice测量出两个比特，并把结果告诉Bob</li><li>Bob根据Alice的测量结果分别作用X门和Z门到自己手中的比特上即可</li></ol><p><img src="/img/telepotation.png" alt="量子隐形传态"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Notes on &lt;em&gt;Quantum Computation and Quantum Information&lt;/em&gt;.&lt;br&gt;量子隐形传态过程。&lt;br&gt;
    
    </summary>
    
    
      <category term="量子信息" scheme="https://github.com/donghufeng/categories/%E9%87%8F%E5%AD%90%E4%BF%A1%E6%81%AF/"/>
    
    
      <category term="量子信息" scheme="https://github.com/donghufeng/tags/%E9%87%8F%E5%AD%90%E4%BF%A1%E6%81%AF/"/>
    
      <category term="量子隐形传态" scheme="https://github.com/donghufeng/tags/%E9%87%8F%E5%AD%90%E9%9A%90%E5%BD%A2%E4%BC%A0%E6%80%81/"/>
    
  </entry>
  
  <entry>
    <title>Notes on Quantum Information - 零碎知识点</title>
    <link href="https://github.com/donghufeng/2020/03/16/Notes-on-Quantum-Information-%E9%9B%B6%E7%A2%8E%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>https://github.com/donghufeng/2020/03/16/Notes-on-Quantum-Information-零碎知识点/</id>
    <published>2020-03-16T04:00:22.000Z</published>
    <updated>2020-03-16T05:25:01.630Z</updated>
    
    <content type="html"><![CDATA[<p>Notes on <em>Quantum Computation and Quantum Information</em>.<br>记录零碎知识点。<br><a id="more"></a></p><h2 id="模二加法"><a href="#模二加法" class="headerlink" title="模二加法"></a>模二加法</h2><p>模二加法$\oplus$是不考虑进位的加法，是加法运算的子集，等同于异或，满足交换律结合律</p><script type="math/tex; mode=display">a\oplus a=0, 0\oplus a=a,1\oplus a=\bar{a}</script><h2 id="单比特任意门分解"><a href="#单比特任意门分解" class="headerlink" title="单比特任意门分解"></a>单比特任意门分解</h2><script type="math/tex; mode=display">U=e^{i\alpha}R_z(\beta)R_y(\gamma)R_z(\delta)</script><h2 id="贝尔态"><a href="#贝尔态" class="headerlink" title="贝尔态"></a>贝尔态</h2><p>先作用Hadmard门，再作用和CNOT门。</p><script type="math/tex; mode=display">\left|\beta_{xy}\right>=\frac{\left|0,y\right>+(-1)^x \left|1,\bar{y}\right>}{\sqrt{2}}</script><h2 id="不同总类的算符"><a href="#不同总类的算符" class="headerlink" title="不同总类的算符"></a>不同总类的算符</h2><ul><li>Hermitian</li></ul><script type="math/tex; mode=display">A=A^\dagger</script><ul><li>Unitary</li></ul><script type="math/tex; mode=display">UU^\dagger=I</script><ul><li>Normal</li></ul><script type="math/tex; mode=display">AA^\dagger=A^\dagger A</script><ul><li>Positive</li></ul><script type="math/tex; mode=display">\left<v\right|A\left|v\right>\ge 0, \text{for any} \left|v\right></script><ul><li>Positive definite</li></ul><script type="math/tex; mode=display">\left<v\right|A\left|v\right> > 0, \text{for any} \left|v\right></script><ul><li>Projector</li></ul><script type="math/tex; mode=display">P=\sum_{i=1}^k \left|i\right>\left<i\right|</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Notes on &lt;em&gt;Quantum Computation and Quantum Information&lt;/em&gt;.&lt;br&gt;记录零碎知识点。&lt;br&gt;
    
    </summary>
    
    
      <category term="量子信息" scheme="https://github.com/donghufeng/categories/%E9%87%8F%E5%AD%90%E4%BF%A1%E6%81%AF/"/>
    
    
      <category term="量子信息" scheme="https://github.com/donghufeng/tags/%E9%87%8F%E5%AD%90%E4%BF%A1%E6%81%AF/"/>
    
      <category term="模二加法" scheme="https://github.com/donghufeng/tags/%E6%A8%A1%E4%BA%8C%E5%8A%A0%E6%B3%95/"/>
    
      <category term="门分解" scheme="https://github.com/donghufeng/tags/%E9%97%A8%E5%88%86%E8%A7%A3/"/>
    
      <category term="贝尔态" scheme="https://github.com/donghufeng/tags/%E8%B4%9D%E5%B0%94%E6%80%81/"/>
    
      <category term="算符分类" scheme="https://github.com/donghufeng/tags/%E7%AE%97%E7%AC%A6%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>量子线路求导</title>
    <link href="https://github.com/donghufeng/2020/03/16/%E9%87%8F%E5%AD%90%E7%BA%BF%E8%B7%AF%E6%B1%82%E5%AF%BC/"/>
    <id>https://github.com/donghufeng/2020/03/16/量子线路求导/</id>
    <published>2020-03-16T03:55:49.000Z</published>
    <updated>2020-03-16T03:57:14.726Z</updated>
    
    <content type="html"><![CDATA[<p>推导对含参数的量子线路的求导。<br><a id="more"></a></p><h2 id="单比特"><a href="#单比特" class="headerlink" title="单比特"></a>单比特</h2><h2 id="多比特"><a href="#多比特" class="headerlink" title="多比特"></a>多比特</h2><h2 id="多泡利算符"><a href="#多泡利算符" class="headerlink" title="多泡利算符"></a>多泡利算符</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;推导对含参数的量子线路的求导。&lt;br&gt;
    
    </summary>
    
    
      <category term="量子信息" scheme="https://github.com/donghufeng/categories/%E9%87%8F%E5%AD%90%E4%BF%A1%E6%81%AF/"/>
    
    
      <category term="量子信息" scheme="https://github.com/donghufeng/tags/%E9%87%8F%E5%AD%90%E4%BF%A1%E6%81%AF/"/>
    
      <category term="泡利算符" scheme="https://github.com/donghufeng/tags/%E6%B3%A1%E5%88%A9%E7%AE%97%E7%AC%A6/"/>
    
      <category term="旋转算符" scheme="https://github.com/donghufeng/tags/%E6%97%8B%E8%BD%AC%E7%AE%97%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>Notes on Quantum Information - 泡利算符性质</title>
    <link href="https://github.com/donghufeng/2020/03/16/Notes-on-Quantum-Information-%E6%B3%A1%E5%88%A9%E7%AE%97%E7%AC%A6%E6%80%A7%E8%B4%A8/"/>
    <id>https://github.com/donghufeng/2020/03/16/Notes-on-Quantum-Information-泡利算符性质/</id>
    <published>2020-03-16T03:40:34.000Z</published>
    <updated>2020-03-16T03:55:29.308Z</updated>
    
    <content type="html"><![CDATA[<p>Notes on <em>Quantum Computation and Quantum Information</em>.<br>泡利算符的有用性质。<br><a id="more"></a></p><h2 id="基本性质"><a href="#基本性质" class="headerlink" title="基本性质"></a>基本性质</h2><p>为了方便，取$\sigma_1=\sigma_x,\sigma_2=\sigma_y, \sigma_3=\sigma_z$。<br>对于任意的三位单位矢量$\vec{v}$，有</p><script type="math/tex; mode=display">(\vec{v}\cdot \vec{\sigma})^2 =I</script><p>由此可证明：</p><script type="math/tex; mode=display">\exp{i\theta \vec{v}\cdot \vec{\sigma}}=\cos(\theta)I+i\sin(\theta)\vec{v}\cdot\vec{\sigma}</script><p>更进一步，对于任意函数$f$，有：</p><script type="math/tex; mode=display">f(\theta \vec{v}\cdot\vec{\sigma})=\frac{f(\theta)+f(-\theta)}{2}I+\frac{f(\theta)-f(-\theta)}{2}\vec{v}\cdot\vec{\sigma}</script><p>假设$\vec{v}\cdot\vec{\sigma}$的本征态为$\left|a\right&gt;,\left|b\right&gt;$，并将$\left|0\right&gt;$和$\left|1\right&gt;$本征态基矢上展开：</p><script type="math/tex; mode=display">\begin{aligned}\left|0\right>&=\alpha \left|a\right>+\beta \left|b\right>\\\left|1\right>&=\gamma \left|a\right>+\delta \left|b\right>\end{aligned}</script><p>这里$\alpha,\beta,\gamma,\delta$是一个酉矩阵的矩阵元，所以$\alpha\delta-\beta\gamma=e^{i\theta}$，是一个相位，因此</p><script type="math/tex; mode=display">\frac{\left|01\right>-\left|10\right>}{\sqrt{2}}=e^{i\theta}\frac{\left|ab\right>-\left|ba\right>}{\sqrt{2}}</script><p>所以，对于自旋单态，对于任意的$\vec{v}$方向测量$\vec{v}\cdot\vec{\sigma}$，如果第一个比特测量得到正方向（$\left|a\right&gt;$）则第二个比特位负方向（$\left|b\right&gt;$），反之亦然。</p><p>对易关系：</p><script type="math/tex; mode=display">\left[\sigma_i,\sigma_j\right]=2i\varepsilon_{ijk}\sigma_k</script><p>反对易关系：</p><script type="math/tex; mode=display">\left\{\sigma_i,\sigma_j\right\}=0</script><p>由反对以关系还可以得到：</p><script type="math/tex; mode=display">\sigma_i\sigma_j\sigma_i=-\sigma_j</script><p>其物理图像为，在布洛赫球中，将$j$轴绕$i$转动$\pi$的坐标变换，此时$j$轴变为$-j$轴。</p><h2 id="泡利矩阵、旋转算符和旋转哈密顿量之间的关系"><a href="#泡利矩阵、旋转算符和旋转哈密顿量之间的关系" class="headerlink" title="泡利矩阵、旋转算符和旋转哈密顿量之间的关系"></a>泡利矩阵、旋转算符和旋转哈密顿量之间的关系</h2><script type="math/tex; mode=display">U=R_i(\omega t)=e^{-i\omega t \sigma_i/2}=\cos(\omega t/2)I-i\sin(\omega t/2)\sigma_i</script><p>对应的哈密顿量为$H=\hbar \omega \sigma_i/2$</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Notes on &lt;em&gt;Quantum Computation and Quantum Information&lt;/em&gt;.&lt;br&gt;泡利算符的有用性质。&lt;br&gt;
    
    </summary>
    
    
      <category term="量子信息" scheme="https://github.com/donghufeng/categories/%E9%87%8F%E5%AD%90%E4%BF%A1%E6%81%AF/"/>
    
    
      <category term="量子信息" scheme="https://github.com/donghufeng/tags/%E9%87%8F%E5%AD%90%E4%BF%A1%E6%81%AF/"/>
    
      <category term="泡利算符" scheme="https://github.com/donghufeng/tags/%E6%B3%A1%E5%88%A9%E7%AE%97%E7%AC%A6/"/>
    
      <category term="旋转算符" scheme="https://github.com/donghufeng/tags/%E6%97%8B%E8%BD%AC%E7%AE%97%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>Notes on Quantum Information - 常用量子门</title>
    <link href="https://github.com/donghufeng/2020/03/16/Notes-on-Quantum-Information-%E5%B8%B8%E7%94%A8%E9%87%8F%E5%AD%90%E9%97%A8/"/>
    <id>https://github.com/donghufeng/2020/03/16/Notes-on-Quantum-Information-常用量子门/</id>
    <published>2020-03-16T03:33:28.000Z</published>
    <updated>2020-03-16T03:38:53.167Z</updated>
    
    <content type="html"><![CDATA[<p>Notes on <em>Quantum Computation and Quantum Information</em>.<br>常用量子门及其性质<br><a id="more"></a></p><ul><li>$\text{Pauli-X}=\sigma_x=R_x(\pi)$:</li></ul><script type="math/tex; mode=display">\begin{pmatrix}0&1\\1&0\end{pmatrix}</script><ul><li>$R_x(\theta)$:</li></ul><script type="math/tex; mode=display">\begin{pmatrix}\cos \left(\frac{\theta}{2}\right)&-i\sin \left(\frac{\theta}{2}\right)\\-i\sin \left(\frac{\theta}{2}\right)&\cos \left(\frac{\theta}{2}\right)\end{pmatrix}</script><ul><li>$\text{Pauli-Y}=\sigma_y=R_y(\pi)$:</li></ul><script type="math/tex; mode=display">\begin{pmatrix}0&-i\\i&0\end{pmatrix}</script><ul><li>$R_y(\theta)$:</li></ul><script type="math/tex; mode=display">\begin{pmatrix}\cos \left(\frac{\theta}{2}\right)&-\sin \left(\frac{\theta}{2}\right)\\\sin \left(\frac{\theta}{2}\right)&\cos \left(\frac{\theta}{2}\right)\end{pmatrix}</script><ul><li>$\text{Pauli-Z}=\sigma_z=R_z(\pi)$:</li></ul><script type="math/tex; mode=display">\begin{pmatrix}1&0\\0&-1\end{pmatrix}</script><ul><li>$R_z(\theta)$:</li></ul><script type="math/tex; mode=display">\begin{pmatrix}e^{-i\theta/2}&0\\0&e^{i\theta/2}\end{pmatrix}</script><ul><li>Hadamard门</li></ul><script type="math/tex; mode=display">\frac{1}{\sqrt{2}}\begin{pmatrix}1&1\\1&-1\end{pmatrix}=R_x(\pi)R_y(\pi/2)=XY^{1/2}</script><p>均匀叠加态：</p><script type="math/tex; mode=display">H^{\otimes n}\left|0\right>^{\otimes n}=\frac{1}{\sqrt{2^n}}\sum_{x\in\{0,1\}^n}\left|x\right></script><p>对于单比特时：</p><script type="math/tex; mode=display">H \left|x\right>=\frac{1}{\sqrt{2}}\sum_{z\in \{0,1\}}(-1)^{xz}\left|z\right>=\frac{1}{\sqrt{2}}\sum_{z\in \{0,1\}}e^{ixz\pi}\left|z\right></script><p>更进一步，当初始态为$n$比特任意态时：</p><script type="math/tex; mode=display">H^{\otimes n}\left|x\right>=\frac{1}{\sqrt{2^n}}\sum_{z}(-1)^{x\cdot z}\left|z\right></script><p>其中$x\cdot z$为$\left|x\right&gt;$和$\left|z\right&gt;$逐比特位相乘再求和。</p><ul><li>CNOT门</li></ul><script type="math/tex; mode=display">\begin{pmatrix}1&0&0&0\\0&1&0&0\\0&0&0&1\\0&0&1&0\end{pmatrix}</script><p>或：</p><script type="math/tex; mode=display">\left|A,B\right>\rightarrow \left|A,A\oplus B\right></script><p>任意位置的CNOT门，以6比特1和3控制5为例：</p><script type="math/tex; mode=display">\begin{aligned}&\left|1\right> \left<1\right|\otimes I\otimes \left|1\right> \left<1\right|\otimes I\otimes X\otimes I+\\&\left|0\right> \left<0\right|\otimes I\otimes \left|1\right> \left<1\right|\otimes I\otimes I\otimes I+\\&\left|1\right> \left<1\right|\otimes I\otimes \left|0\right> \left<0\right|\otimes I\otimes I\otimes I+\\&\left|0\right> \left<0\right|\otimes I\otimes \left|0\right> \left<0\right|\otimes I\otimes I\otimes I\\\end{aligned}</script><p>如果直接对态进行操作，则需要将如下态的系数之间做交换：</p><script type="math/tex; mode=display">\left|A,B,C,D,E,F\right>\rightarrow \left|A,B,C,D,(AC)\oplus E,F\right></script><p>这里$\oplus$是模二加法运算。整个过程用伪代码表示为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> BDF <span class="keyword">in</span> &#123;<span class="number">0</span>,<span class="number">1</span>&#125;^<span class="number">3</span>:</span><br><span class="line">    a=(insert <span class="number">110</span> into BDF <span class="keyword">and</span> get <span class="number">1</span>B1D0F)</span><br><span class="line">    b=(insert <span class="number">111</span> into BDF <span class="keyword">and</span> get <span class="number">1</span>B1D1F)</span><br><span class="line">    swap(wavefunction[a], wavefunction[b])</span><br></pre></td></tr></table></figure><ul><li>SWAP门：</li></ul><p>经典计算里，异或运算可以用来交换两个数而不引入中间变量：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x,y</span><br><span class="line">x=x^y</span><br><span class="line">y=x^y <span class="comment">#y=x^y^y=x^0=x</span></span><br><span class="line">x=x^y <span class="comment">#y=x^y^x=y^0=y</span></span><br></pre></td></tr></table></figure><p>量子计算里，也可以通过三个CNOT门来实现比特交换：</p><script type="math/tex; mode=display">\begin{aligned}\left|a,b\right>&\rightarrow \left|a,a\oplus b\right>\\&\rightarrow \left|a\oplus a\oplus b,a\oplus b\right>=\left|b,a\oplus b\right>\\&\rightarrow \left|b,a\oplus b \oplus b\right>=\left|b,a\right>\end{aligned}</script><ul><li>Toffoli门<br>就是CCNOT门。<br>模拟与非门：$T \left|a,b,1\right&gt;=\left|a,b,1\oplus(ab)\right&gt;=\left|a,b,\bar{ab}\right&gt;$<br>模拟FANOUT扇出：$T \left|1,a,0\right&gt;=\left|1,a,a\right&gt;$<br><strong>注意，上述的模拟不是通用的，只对输入为$\left|0\right&gt;$或者$\left|1\right&gt;$适用。</strong></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Notes on &lt;em&gt;Quantum Computation and Quantum Information&lt;/em&gt;.&lt;br&gt;常用量子门及其性质&lt;br&gt;
    
    </summary>
    
    
      <category term="量子信息" scheme="https://github.com/donghufeng/categories/%E9%87%8F%E5%AD%90%E4%BF%A1%E6%81%AF/"/>
    
    
      <category term="量子信息" scheme="https://github.com/donghufeng/tags/%E9%87%8F%E5%AD%90%E4%BF%A1%E6%81%AF/"/>
    
      <category term="泡利算符" scheme="https://github.com/donghufeng/tags/%E6%B3%A1%E5%88%A9%E7%AE%97%E7%AC%A6/"/>
    
      <category term="量子门" scheme="https://github.com/donghufeng/tags/%E9%87%8F%E5%AD%90%E9%97%A8/"/>
    
      <category term="Hadamard" scheme="https://github.com/donghufeng/tags/Hadamard/"/>
    
      <category term="CNOT" scheme="https://github.com/donghufeng/tags/CNOT/"/>
    
      <category term="SWAP" scheme="https://github.com/donghufeng/tags/SWAP/"/>
    
      <category term="Toffoli" scheme="https://github.com/donghufeng/tags/Toffoli/"/>
    
  </entry>
  
  <entry>
    <title>Note on Quantum Information - 态的基本表述</title>
    <link href="https://github.com/donghufeng/2020/03/16/Note-on-Quantum-Information-%E6%80%81%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%A1%A8%E8%BF%B0/"/>
    <id>https://github.com/donghufeng/2020/03/16/Note-on-Quantum-Information-态的基本表述/</id>
    <published>2020-03-16T02:31:18.000Z</published>
    <updated>2020-03-16T03:31:53.654Z</updated>
    
    <content type="html"><![CDATA[<p>Notes on <em>Quantum Computation and Quantum Information</em>.<br>单比特和多比特量子态的基本表示方式。<br><a id="more"></a></p><h2 id="单比特"><a href="#单比特" class="headerlink" title="单比特"></a>单比特</h2><p>单比特量子态的一般表达式为：</p><script type="math/tex; mode=display">\begin{aligned}    \left|\psi\right>=e^{i\gamma}\left(\cos\frac{\theta}{2}\left|0\right>+e^{i\varphi}\sin\frac{\theta}{2}\left|1\right>\right)\end{aligned}</script><p>这里$\gamma$为全局相位，$\theta$和$\varphi$为布洛赫球中的坐标，<strong>注意，上式中是$\frac{\theta}{2}$</strong>。<br><img src="/img/bloch_sphere.png" alt="布洛赫球"><br>布洛赫球中不同坐标轴表示的单比特量子态</p><script type="math/tex; mode=display">\begin{array}{|c||c|}\hline轴&\left|\psi\right>\\\hline+Z&\left|0\right>\\\hline-Z&\left|1\right>\\\hline+X&\frac{\left|0\right>+\left|1\right>}{\sqrt{2}}\\\hline-X&\frac{\left|0\right>-\left|1\right>}{\sqrt{2}}\\\hline+Y&\frac{\left|0\right>+i\left|1\right>}{\sqrt{2}}\\\hline-Y&\frac{\left|0\right>-i\left|1\right>}{\sqrt{2}}\\\hline \end{array}</script><p><strong>各轴代表的态是对应Pauli算符的本征值，正轴向的态本征值为1，负轴向的态本征值为-1</strong></p><h2 id="多比特"><a href="#多比特" class="headerlink" title="多比特"></a>多比特</h2><p>两比特量子态可表示为：</p><script type="math/tex; mode=display">\left|\varphi\right>=\alpha_{00}\left|00\right>+\alpha_{01}\left|01\right>+\alpha_{10}\left|10\right>+\alpha_{11}\left|11\right>.</script><p>归一化条件为</p><script type="math/tex; mode=display">\sum_{x\in\{0,1\}^2}\left|\alpha_{x}\right|^2</script><p><strong>其中$\{0,1\}^2$表示由0和1构成的所有长度为2的字符串的集合。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Notes on &lt;em&gt;Quantum Computation and Quantum Information&lt;/em&gt;.&lt;br&gt;单比特和多比特量子态的基本表示方式。&lt;br&gt;
    
    </summary>
    
    
      <category term="量子信息" scheme="https://github.com/donghufeng/categories/%E9%87%8F%E5%AD%90%E4%BF%A1%E6%81%AF/"/>
    
    
      <category term="量子信息" scheme="https://github.com/donghufeng/tags/%E9%87%8F%E5%AD%90%E4%BF%A1%E6%81%AF/"/>
    
      <category term="布洛赫球" scheme="https://github.com/donghufeng/tags/%E5%B8%83%E6%B4%9B%E8%B5%AB%E7%90%83/"/>
    
      <category term="泡利算符" scheme="https://github.com/donghufeng/tags/%E6%B3%A1%E5%88%A9%E7%AE%97%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>格林函数</title>
    <link href="https://github.com/donghufeng/2019/10/22/%E6%A0%BC%E6%9E%97%E5%87%BD%E6%95%B0/"/>
    <id>https://github.com/donghufeng/2019/10/22/格林函数/</id>
    <published>2019-10-22T09:10:45.000Z</published>
    <updated>2020-03-15T15:15:47.859Z</updated>
    
    <content type="html"><![CDATA[<p>以势能的求解为例，我们来了解一下格林函数。<br><a id="more"></a><br>假设空间有电荷量分布为 $\rho(r)$ ,则根据高斯定理，我们有空间电场应该满足条件<script type="math/tex">\nabla\cdot E(r)=\frac{\rho(r)}{\varepsilon_0},</script>再根据$E(r)=-\nabla \phi(r)$，结合起来看，我们可以求得电势和电荷分布之间的关系<script type="math/tex">-\nabla^2\phi(r)=\frac{\rho(r)}{\varepsilon_0},</script>此即为泊松方程，进一步我们有</p><script type="math/tex; mode=display">\begin{aligned}-\nabla^2\phi(r_1)&=\frac{\rho(r_1)}{\varepsilon_0}\\&=\frac{1}{\varepsilon_0}\int\delta(r_1-r_2)\rho(r_2)d^3r_2\\&=\frac{1}{\varepsilon_0}\int[-\nabla^2G(r_1,r_2)]\rho(r_2)d^3r_2\\&=-\nabla^2\left\{\frac{1}{\varepsilon_0}\int G(r_1,r_2)\rho(r_2)d^3r_2\right\}\end{aligned}</script><p>其中$G(r_1,r_2)$即为格林函数。所以我们求解此泊松方程等价于求满足<script type="math/tex">-\nabla^2G(r_1,r_2)]=\delta(r_1-r_2)</script>的格林函数即可，然后在利用<script type="math/tex">\phi(r_1)=\frac{1}{\varepsilon_0}\int G(r_1,r_2)\rho(r_2)d^3r_2</script>可求得空间的电势分布。其实，根据电势叠加定理我们可以直接写出<script type="math/tex">\phi(r_1)=\frac{1}{4\pi\varepsilon_0}\int\frac{\rho(r_2)}{\left|r_1-r_2\right|}d^3r_2</script>由此得到的格林函数<script type="math/tex">G(r_1,r_2)=\frac{1}{4\pi}\frac{1}{\left|r_1-r_2\right|}</script>与前式满足泊松方程所解得的格林函数是一致的。对于这种利用格林函数来求解微分方程的方法，我们可以理解为利用点电荷产生的势的叠加来求得总的势。</p><h3 id="更一般的情况"><a href="#更一般的情况" class="headerlink" title="更一般的情况"></a>更一般的情况</h3><p>设我们有算符$\mathcal{L}$，其作用在势分布函数$y(r)$上得到空间源分布$f(r)$，则我们有</p><script type="math/tex; mode=display">\begin{aligned}\mathcal{L}y(r)&=f(r)\\&=\int\delta(r-r')f(r')dr'\\&=\int \mathcal{L}G(r,r')f(r')dr'\\&=\mathcal{L}\int G(r,r')f(r')dr'\\\end{aligned}</script><p>并且</p><script type="math/tex; mode=display">\mathcal{L} G(r,r')=\delta(r-r')</script><script type="math/tex; mode=display">y(r)=\int G(r,r')f(r')dr'</script><h3 id="物理学中的一些格林函数"><a href="#物理学中的一些格林函数" class="headerlink" title="物理学中的一些格林函数"></a>物理学中的一些格林函数</h3><script type="math/tex; mode=display">\begin{array}{c|ccc}dim & \nabla^2 & \nabla^2+k^2 & \nabla^2-k^2\\\hline1 & \frac{1}{2}\left|x_1-x_2\right| & -\frac{i}{2k}\exp(ik\left|x_1-x_2\right|) & -\frac{1}{2k}\exp(-k\left|x_1-x_2\right|)\\2 & \frac{1}{2\pi}\ln\left|\rho_1-\rho_2\right| & -\frac{i}{4}H_0^{(1)}(k\left|\rho_1-\rho_2\right|) & -\frac{1}{2\pi}K_0(k\left|\rho_1-\rho_2\right|)\\3 & -\frac{1}{4\pi}\frac{1}{\left|r_1-r_2\right|} & -\frac{\exp(ik\left|r_1-r_2\right|)}{4\pi\left|r_1-r_2\right|} & -\frac{\exp(-k\left|r_1-r_2\right|)}{4\pi\left|r_1-r_2\right|}\end{array}</script><p>其中$H_0^{(1)}$为Hankel函数，$K_0$是modified Bessel函数。</p><blockquote><p>求得格林函数后，如果积分不容易，我们可以采用技术展开的方法来积分，例如波恩近似便是。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以势能的求解为例，我们来了解一下格林函数。&lt;br&gt;
    
    </summary>
    
    
      <category term="数学" scheme="https://github.com/donghufeng/categories/%E6%95%B0%E5%AD%A6/"/>
    
    
      <category term="数学" scheme="https://github.com/donghufeng/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://github.com/donghufeng/2019/10/22/hello-world/"/>
    <id>https://github.com/donghufeng/2019/10/22/hello-world/</id>
    <published>2019-10-22T08:38:26.180Z</published>
    <updated>2019-10-22T08:53:59.521Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><p>$\alpha$</p><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
